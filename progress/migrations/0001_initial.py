# Generated by Django 5.2.7 on 2025-10-24 12:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('topic_completion', 'Topic Completion'), ('quiz_mastery', 'Quiz Mastery'), ('simulation_explorer', 'Simulation Explorer'), ('streak', 'Learning Streak'), ('speed_learner', 'Speed Learner'), ('perfectionist', 'Perfectionist')], max_length=30)),
                ('icon', models.CharField(help_text='Icon class or name', max_length=100)),
                ('criteria', models.JSONField(help_text='Criteria for earning this achievement')),
                ('points', models.PositiveIntegerField(default=10, help_text='Points awarded')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_study_time', models.PositiveIntegerField(default=0, help_text='Total study time in minutes')),
                ('topics_completed', models.PositiveIntegerField(default=0)),
                ('quizzes_taken', models.PositiveIntegerField(default=0)),
                ('simulations_explored', models.PositiveIntegerField(default=0)),
                ('current_streak', models.PositiveIntegerField(default=0, help_text='Current learning streak in days')),
                ('longest_streak', models.PositiveIntegerField(default=0, help_text='Longest learning streak in days')),
                ('average_quiz_score', models.FloatField(blank=True, null=True)),
                ('favorite_topics', models.JSONField(default=list, help_text='Most studied topics')),
                ('learning_velocity', models.FloatField(default=0, help_text='Topics completed per week')),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('topic_study', 'Topic Study'), ('quiz_practice', 'Quiz Practice'), ('simulation_exploration', 'Simulation Exploration'), ('review', 'Review Session')], max_length=30)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('activities_completed', models.JSONField(default=list, help_text='List of completed activities')),
                ('concepts_learned', models.TextField(blank=True)),
                ('questions_asked', models.TextField(blank=True)),
                ('satisfaction_rating', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopicProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('mastered', 'Mastered')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.PositiveIntegerField(default=0, help_text='Time spent in minutes')),
                ('understanding_level', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Self-rated understanding (1-5)', null=True)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about the topic')),
                ('last_accessed', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learning_goals', models.TextField(blank=True, help_text="Student's learning goals")),
                ('preferred_learning_style', models.CharField(choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('kinesthetic', 'Kinesthetic'), ('reading', 'Reading/Writing')], default='visual', max_length=50)),
                ('physics_background', models.CharField(choices=[('beginner', 'Complete Beginner'), ('some_knowledge', 'Some Knowledge'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=50)),
                ('time_available', models.PositiveIntegerField(default=30, help_text='Available study time per week in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
