# Generated by Django 5.2.7 on 2025-10-24 12:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('topics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('fill_blank', 'Fill in the Blank'), ('short_answer', 'Short Answer'), ('calculation', 'Calculation'), ('matching', 'Matching'), ('ordering', 'Ordering')], max_length=20)),
                ('question_text', models.TextField()),
                ('explanation', models.TextField(blank=True, help_text='Explanation for the correct answer')),
                ('points', models.PositiveIntegerField(default=1)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuizFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty_rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Rate quiz difficulty (1-5)')),
                ('helpful_rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Rate helpfulness (1-5)')),
                ('concepts_understood', models.TextField(blank=True, help_text='Which concepts do you understand well?')),
                ('concepts_confusing', models.TextField(blank=True, help_text='Which concepts need more practice?')),
                ('suggestions', models.TextField(blank=True, help_text='Suggestions for improvement')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True, help_text='For text-based questions')),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.FloatField(default=0)),
                ('time_taken', models.PositiveIntegerField(blank=True, help_text='Time taken for this question in seconds', null=True)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('explanation', models.TextField(blank=True, help_text='Why this answer is correct/incorrect')),
                ('order', models.PositiveIntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.question')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('instructions', models.TextField(help_text='Instructions for taking the quiz')),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Passing percentage')),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='Maximum attempts allowed')),
                ('is_randomized', models.BooleanField(default=True, help_text='Randomize question order')),
                ('show_correct_answers', models.BooleanField(default=True, help_text='Show correct answers after completion')),
                ('show_explanations', models.BooleanField(default=True, help_text='Show explanations for answers')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='topics.physicstopic')),
            ],
            options={
                'ordering': ['topic__grade__order', 'topic__order', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizzes.quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.PositiveIntegerField(blank=True, help_text='Time taken in seconds', null=True)),
                ('score', models.FloatField(blank=True, help_text='Score percentage', null=True)),
                ('is_passed', models.BooleanField(default=False)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='quizzes.quiz')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
    ]
