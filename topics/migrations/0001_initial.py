# Generated by Django 5.2.7 on 2025-10-24 12:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CBCGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PhysicsTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('learning_outcomes', models.TextField(help_text='CBC learning outcomes for this topic')),
                ('estimated_duration', models.PositiveIntegerField(help_text='Estimated time in minutes')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='topics.cbcgrade')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='prerequisite_for', to='topics.physicstopic')),
            ],
            options={
                'ordering': ['grade__order', 'order'],
            },
        ),
        migrations.CreateModel(
            name='TopicContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('theory', 'Theory'), ('formula', 'Formula'), ('example', 'Example'), ('experiment', 'Experiment'), ('application', 'Real-world Application')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_essential', models.BooleanField(default=True, help_text='Essential for understanding the topic')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='topics.physicstopic')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TopicExperiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('objective', models.TextField()),
                ('materials_needed', models.TextField()),
                ('procedure', models.TextField()),
                ('expected_results', models.TextField()),
                ('safety_notes', models.TextField(blank=True)),
                ('is_virtual', models.BooleanField(default=True)),
                ('simulation_url', models.URLField(blank=True, help_text='Link to interactive simulation')),
                ('order', models.PositiveIntegerField(default=0)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='topics.physicstopic')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TopicFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('formula', models.CharField(help_text='LaTeX format formula', max_length=500)),
                ('description', models.TextField()),
                ('variables', models.JSONField(help_text='Dictionary of variables and their descriptions')),
                ('units', models.CharField(help_text='Result units', max_length=100)),
                ('example_calculation', models.TextField(blank=True)),
                ('is_essential', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulas', to='topics.physicstopic')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TopicMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('animation', 'Animation'), ('diagram', 'Diagram'), ('audio', 'Audio')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='topic_media/')),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media', to='topics.topiccontent')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='topics.physicstopic')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
